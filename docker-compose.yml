version: "3"
services:
  bingo_hasura_db:
    image: postgres:12
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: myapp_development
      POSTGRES_USER: bingo
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  hasura:
    build:
      context: .docker
      dockerfile: hasura.Dockerfile
    container_name: "bingo_hasura"
    ports:
      - "8080:8080"
    # restart: always
    volumes:
      - ./hasura:/hasura
    environment:
      HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura/migrations
      HASURA_GRAPHQL_METADATA_DIR: /hasura/metadata
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DATABASE_URL: postgres://bingo:password@bingo_hasura_db:5432/myapp_development
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
    depends_on:
      bingo_hasura_db:
        condition: service_healthy

  view-user:
    build:
      context: .
      dockerfile: .docker/view-user.Dockerfile
    container_name: "view-user"
    volumes:
      - ./view-user:/app
    command: sh -c "npm install && npm run dev"
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    environment:
      - WATCHPACK_POLLING=true

volumes:
  db-data:
